To get a minimally functional Basis class template:

1) Remove separate (public!) array containing dkSq. This is now a member 
Basis::Star::dEigen of class Basis::Star).

2) Adapt conversion functions (basis-to-DFT and DFT-to-basis) as needed to work 
with updated data structures. Test these functions.

3) Add function Basis::update() that updates the values of eigen and dEigen for 
all stars, and of sqNorm for each wave. You will need to call this each time the 
unit cell parameters change. 

4) Add code to compute dEigen member of each Star to makeStars() function.

5) Add code to Basis::makeStars to identify cancelled stars (not necessary for 
tests with identity group).

6) Add code to Basis::makeStars to compute coeff correctly from operation of 
the space group.

7) Add code to read a space group from a file, given space group name. If we
passed a SpaceGroup<D> object to makeBasis, this code could be outside the
makeBasis function.

8) Question: Should accessors for stars and waves return const references, to
prohibit code outside the class from modifying these objects?
