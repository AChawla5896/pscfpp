TODO (for pssp pseudospectral CPU code)

------------------------------------------------------------------------
class Pscf::UnitCell: (assigned to Anshul)

   - See pscf/crystal/TODO 

------------------------------------------------------------------------
class Pscf::Pssp::Basis: (assigned to Dave)

   - See pssp/basis/TODO 

------------------------------------------------------------------------
Unit Tests: (assigned to Anshul, with help with Basis as needed)

   - Clean up unit test in src/pssp/tests. 

     - Add unit tests of regression (i.e., comparison to Fortran) for 
       several classic phases, e.g., lamellar, hex and bcc, initially 
       with phases computed with no symmetry imposed. To do this, use
       fortran to convert a solution from the fortran code into rgrid, 
       and then used pscfpp to convert this to a symmetry adapted file
       format in which you use space group "I".  Start with lamellar. 
       Store files containing an initial condition in symmetry adapted 
       form in the pssp/system/in directory.

     - After confirming  equivalence of bases from fortran pscf and 
       pscfpp, try reading a fortran solution directly into pscfpp.
       Start with lamellar with inversion symmetry, then hexagonal,
       and bcc
       
     - Try sharing files from from pscf (fortran) to pscfpp for more
       complicated space groups, such as gyroid, and at least one
       group with no inversion symmetry.  

     - Include unit tests of round trips between field file formats, 
       using files generated by Fortran PSCF when possible. 

     - Move all input files used by tests into in/ subdirectory, and
       include a CONTENTS file that explains what each file in that
       directory is for and which tests use it. 

------------------------------------------------------------------------
class System reorganization: (assigned to Dave, lower priority)

   - Finish testing FieldIo class and replace member functions of 
     System by calls to corresponding functions of FieldIo.

------------------------------------------------------------------------
Later:

   - Add point solvents.

   - Add sweep functionality.

