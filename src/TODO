1) For the 1D finite difference code

   TODO:
   - Write more and/or more flexible sweep classes
   - Add an iterator factory
   - Write an Anderson Mixing iterator
   - Add point-like solvents

2) Build specialized pseudospectral code for 1D periodic functions.
   Use directory ps1d, namespace Ps1d

   System {
      Mixture<D>
      Interaction
      Domain
      wFields
      cFields
      Iterator
   }

   TODO: (Bottom Up)
      -Install and test FFT library
      -Define Field class
      -Class skeletons

3) Build a pseudospectral code for periodic functions with
   known space group symmetry, in 1D, 2D or 3D.
   Use directory pssp, namespace PsSp

   Develop class templates that allow compilation of 
   programs for spatial dimension D = 1, 2, or 3.

   template <int D>
   System<D> {
      Mixture<D>
      Interaction
      UnitCell<D>
      Mesh<D>
      SpaceGroup<D>
      Basis<D>
      wFields
      cFields
      Iterator
   }

   Next:

       Write wrapper code for FFTW
       Finish interface for Basis
       Write an explicit specialization Basis<1> of Basis for D=1
       Write pseudo-spectral Propagator and Block classes
       Start with PicardIterator and/or NrIterator

       Provide functions to convert between FFT and FBZ vectors.

5) Add general code for symmetry adapted basis functions.

6) Add stress calculators.
