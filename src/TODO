1) Build a simple 1D finite difference code.  
   Use directory fd1d, namespace Pscf::Fd1d.  Start with a Newton-Raphson iterator

   System {
      Mixture
      Interaction
      Grid
      Iterator
      wFields
      cFields
   }

  Next: Construct a simple iterator, Newton-Raphson and/or relaxation.

2) Build a pseudospectral code for periodic functions.
   Use directory pssp, namespace PsSp

   System {
      Mixture
      Interaction
      Boundary
      SpaceGroup
      Basis
      wFields
      cFields
      Iterator
   }

   Develop classes that allow compilation of programs for 1D, 2D and 3D. 

   One solution: Use a global dimension variable or macro, supply different build 
   directories. Down side - codes with different dimensions cannot coexist in the
   same build directory.

   Alternative: Templatize everything involving vectors in terms of dimension?

   Next:

       Start with a stub of Basis, written for cosines.
       Provide functions to convert between FFT and FBZ vectors.

   Start with Gauss-Seidel RelaxationIterator and/or NewtonRaphsonIterator

4) Add AndersonIterator, perhaps an approximate NR iterator

5) Add general code for symmetry adapted basis functions.

6) Add stress calculators.
