#include "Dimension.h"

class Basis {

   // Associate
   void setUnitCell(const UnitCell& unitCell)
   void setGrid(const Grid& grid)

   // Initialize
   void allocate();
   void deallocate();

   // Accessors for data to describe basis
 
   int nWave()
   int NStar()

   const& Wave wave(int i);
   const& Wave star(int i);

private:

   int nWave_;
   int NStar_;

   // Wave class ?
   DArray<Grid::Vector> wave_;
   DArray<double> GSq_;
   DArray<std::complex<double>> coeff_;
   DArray<int> starOfWave_;
   DArray<int> whichWave_;   <---- Function that allows access by Grid::Vector

   // Star class ?
   DArray<int> starBegin_; 
   DArray<int> starEnd_;  
   DArray<int> starCount_; 
   DArray<int> starInvert_; 
   DArray<int> basisSign_; 
   DArray<Grid::Vector> waveOfStar_;
   DArray<bool> starCancel_;
   
}
