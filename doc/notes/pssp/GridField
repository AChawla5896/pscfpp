
template <int D, typename T = double>
class GridField 
{

   double operator [](int i);
   const double& operator [](int i) const;

   // Function to access by GridVector
   double operator ()(IntVector<D, T>& position);
   const double& operator ()(IntVector<D, T>& position) const;

   // Assignment operator
   GridField<D, T>& operator = (GridField<D, T>& other);

   // Assignment operator
   GridField<D, T>& operator = (double& other);

   // Increment operator
   GridField<D, T>& operator += (GridField<D, T>& other);

   // Decrement operator
   GridField<D, T>& operator -= (GridField<D, T>& other);

   // Pointwise multipication of fields
   GridField<D, T>& operator *= (GridField<D, T>& other);

   /**
   * Set to zero.
   */
   void setToZero();

   /**
   * Compute and return spatial average.
   */
   double average();

};

Functions:

1) Inner product of any two fields, used for WField and CField.


