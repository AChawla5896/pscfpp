-------------------------------------------------------------
Field Class Concepts:

class WField : public DArray<double>
{

   // Read-write access by basis function coefficient
   Array<double>& expansion();
   double& operator () (int i);
   double operator () (int i) const;

   // Assignment operator
   WField& operator = (WField& other);

   // Increment operator
   WField& operator += (WField& other);

   // Decrement operator
   WField& operator -= (WField& other);
};


class CField : public DArray<double>
{

   /**
   * Set field to be zero for all positions.
   */
   setToZero();

   // Read-write access by basis function coefficient
   Array<double>& expansion();
   double& operator () (int i);
   double operator () (int i) const;

   // Assignment operator
   QField& operator = (QField& other);

   // Increment operator
   QField& operator += (QField& other);

   // Decrement operator
   QField& operator -= (QField& other);

};

class QField 
{
   /**
   * Set to identity field.
   */
   setToIdentity();

   /**
   * Compute and return spatial average.
   */
   virtual double average();

   /**
   * Return
   */
   DArray<double>& grid();

   // Read-write access by grid point
   double& operator [] (int i);
   double operator [] (int i) const;

   // Assignment operator
   QField& operator = (QField& other);

   // Pointwise multipication of fields
   QField& operator *= (QField& other);

   // Addition of fields
   QField& operator += (QField& other);

};

Functions:

1) Inner product of WField and CField

2) Other functions (quadratic forms involving C) are model dependent 
